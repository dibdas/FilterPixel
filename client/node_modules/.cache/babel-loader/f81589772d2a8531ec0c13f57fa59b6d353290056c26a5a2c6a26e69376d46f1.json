{"ast":null,"code":"var _jsxFileName = \"/home/dell/assignment/FilterPixel/image-processor-frontend/src/components/AdjustmentSliders.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useImage } from \"../context/ImageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdjustmentSliders = () => {\n  _s();\n  const {\n    settings,\n    setSettings,\n    setPreview\n  } = useImage();\n  const handleSliderChange = async (e, type) => {\n    const value = e.target.value;\n    setSettings(prevSettings => ({\n      ...prevSettings,\n      [type]: value\n    }));\n\n    // Call the backend to update the preview with new settings\n    try {\n      const response = await fetch(\"/process\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          type,\n          value\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      setPreview(data.previewUrl); // Update the real-time preview\n    } catch (err) {\n      console.error(\"Error updating image\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Brightness:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"2\",\n        step: \"0.1\",\n        value: settings.brightness,\n        onChange: e => handleSliderChange(e, \"brightness\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Contrast:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"2\",\n        step: \"0.1\",\n        value: settings.contrast,\n        onChange: e => handleSliderChange(e, \"contrast\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Saturation:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"2\",\n        step: \"0.1\",\n        value: settings.saturation,\n        onChange: e => handleSliderChange(e, \"saturation\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AdjustmentSliders, \"FwMk8eQYLIaqQFDnxjxi2PcsQ8Y=\", false, function () {\n  return [useImage];\n});\n_c = AdjustmentSliders;\nexport default AdjustmentSliders;\nvar _c;\n$RefreshReg$(_c, \"AdjustmentSliders\");","map":{"version":3,"names":["React","useImage","jsxDEV","_jsxDEV","AdjustmentSliders","_s","settings","setSettings","setPreview","handleSliderChange","e","type","value","target","prevSettings","response","fetch","method","body","JSON","stringify","headers","data","json","previewUrl","err","console","error","children","min","max","step","brightness","onChange","fileName","_jsxFileName","lineNumber","columnNumber","contrast","saturation","_c","$RefreshReg$"],"sources":["/home/dell/assignment/FilterPixel/image-processor-frontend/src/components/AdjustmentSliders.js"],"sourcesContent":["import React from \"react\";\nimport { useImage } from \"../context/ImageContext\";\n\nconst AdjustmentSliders = () => {\n  const { settings, setSettings, setPreview } = useImage();\n\n  const handleSliderChange = async (e, type) => {\n    const value = e.target.value;\n    setSettings((prevSettings) => ({\n      ...prevSettings,\n      [type]: value,\n    }));\n\n    // Call the backend to update the preview with new settings\n    try {\n      const response = await fetch(\"/process\", {\n        method: \"POST\",\n        body: JSON.stringify({ type, value }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      setPreview(data.previewUrl); // Update the real-time preview\n    } catch (err) {\n      console.error(\"Error updating image\", err);\n    }\n  };\n\n  return (\n    <div>\n      <label>\n        Brightness:\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"2\"\n          step=\"0.1\"\n          value={settings.brightness}\n          onChange={(e) => handleSliderChange(e, \"brightness\")}\n        />\n      </label>\n      <label>\n        Contrast:\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"2\"\n          step=\"0.1\"\n          value={settings.contrast}\n          onChange={(e) => handleSliderChange(e, \"contrast\")}\n        />\n      </label>\n      <label>\n        Saturation:\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"2\"\n          step=\"0.1\"\n          value={settings.saturation}\n          onChange={(e) => handleSliderChange(e, \"saturation\")}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default AdjustmentSliders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}