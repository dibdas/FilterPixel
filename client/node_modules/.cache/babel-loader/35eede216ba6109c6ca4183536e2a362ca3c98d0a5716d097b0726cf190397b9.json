{"ast":null,"code":"var _jsxFileName = \"/home/dell/assignment/FilterPixel/image-processor-frontend/src/components/ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useImage } from \"../context/ImageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const {\n    setImage,\n    setPreview\n  } = useImage();\n  const [file, setFile] = useState(null);\n  const handleUpload = async event => {\n    const uploadedFile = event.target.files[0];\n    if (!uploadedFile) return;\n    const formData = new FormData();\n    formData.append(\"image\", uploadedFile); // Ensure this matches backend field name\n\n    setImage(uploadedFile);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/images/upload/\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n      const data = await response.json();\n      if (data.previewUrl) {\n        setPreview(data.previewUrl);\n      } else {\n        throw new Error(\"Preview URL not found in response\");\n      }\n    } catch (err) {\n      console.error(\"Error uploading image\", err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png, image/jpeg\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Cropper, {\n        src: file,\n        style: {\n          height: 400,\n          width: \"100%\"\n        },\n        initialAspectRatio: 1,\n        aspectRatio: 1,\n        guides: false,\n        cropBoxResizable: false,\n        ref: cropperRef,\n        onInitialized: instance => setCropper(instance)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCrop,\n        children: \"Crop and Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"Vt8hUSWtqaddJDEV7+Qc93d8RY4=\", false, function () {\n  return [useImage];\n});\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useImage","jsxDEV","_jsxDEV","ImageUpload","_s","setImage","setPreview","file","setFile","handleUpload","event","uploadedFile","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","statusText","data","json","previewUrl","err","console","error","message","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Cropper","src","style","height","width","initialAspectRatio","aspectRatio","guides","cropBoxResizable","ref","cropperRef","onInitialized","instance","setCropper","onClick","handleCrop","_c","$RefreshReg$"],"sources":["/home/dell/assignment/FilterPixel/image-processor-frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useImage } from \"../context/ImageContext\";\n\nconst ImageUpload = () => {\n  const { setImage, setPreview } = useImage();\n  const [file, setFile] = useState(null);\n\n  const handleUpload = async (event) => {\n    const uploadedFile = event.target.files[0];\n    if (!uploadedFile) return;\n\n    const formData = new FormData();\n    formData.append(\"image\", uploadedFile); // Ensure this matches backend field name\n\n    setImage(uploadedFile);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/images/upload/\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      if (data.previewUrl) {\n        setPreview(data.previewUrl);\n      } else {\n        throw new Error(\"Preview URL not found in response\");\n      }\n    } catch (err) {\n      console.error(\"Error uploading image\", err.message);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        accept=\"image/png, image/jpeg\"\n        onChange={handleUpload}\n      />\n      {file && (\n        <div>\n          <Cropper\n            src={file}\n            style={{ height: 400, width: \"100%\" }}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            guides={false}\n            cropBoxResizable={false}\n            ref={cropperRef}\n            onInitialized={(instance) => setCropper(instance)}\n          />\n          <button onClick={handleCrop}>Crop and Process</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC3C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACF,YAAY,EAAE;IAEnB,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,YAAY,CAAC,CAAC,CAAC;;IAExCN,QAAQ,CAACM,YAAY,CAAC;IAEtB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkBL,QAAQ,CAACM,UAAU,EAAE,CAAC;MAC1D;MAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,UAAU,EAAE;QACnBpB,UAAU,CAACkB,IAAI,CAACE,UAAU,CAAC;MAC7B,CAAC,MAAM;QACL,MAAM,IAAIJ,KAAK,CAAC,mCAAmC,CAAC;MACtD;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAACG,OAAO,CAAC;IACrD;EACF,CAAC;EAED,oBACE5B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,uBAAuB;MAC9BC,QAAQ,EAAEzB;IAAa;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACD/B,IAAI,iBACHL,OAAA;MAAA6B,QAAA,gBACE7B,OAAA,CAACqC,OAAO;QACNC,GAAG,EAAEjC,IAAK;QACVkC,KAAK,EAAE;UAAEC,MAAM,EAAE,GAAG;UAAEC,KAAK,EAAE;QAAO,CAAE;QACtCC,kBAAkB,EAAE,CAAE;QACtBC,WAAW,EAAE,CAAE;QACfC,MAAM,EAAE,KAAM;QACdC,gBAAgB,EAAE,KAAM;QACxBC,GAAG,EAAEC,UAAW;QAChBC,aAAa,EAAGC,QAAQ,IAAKC,UAAU,CAACD,QAAQ;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFpC,OAAA;QAAQmD,OAAO,EAAEC,UAAW;QAAAvB,QAAA,EAAC;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CA1DID,WAAW;EAAA,QACkBH,QAAQ;AAAA;AAAAuD,EAAA,GADrCpD,WAAW;AA4DjB,eAAeA,WAAW;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}