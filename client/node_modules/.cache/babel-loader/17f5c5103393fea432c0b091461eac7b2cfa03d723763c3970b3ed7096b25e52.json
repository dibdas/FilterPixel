{"ast":null,"code":"var _jsxFileName = \"/home/dell/assignment/FilterPixel/image-processor-frontend/src/components/AdjustmentSliders.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useImage } from \"../context/ImageContext\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdjustmentSliders = () => {\n  _s();\n  const {\n    settings,\n    setSettings,\n    setPreview,\n    image,\n    preview,\n    setImage\n  } = useImage();\n  const [cropper, setCropper] = useState(null);\n  const cropperRef = useRef(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  useEffect(() => {\n    if (typeof image === \"string\") {\n      setImageUrl(image);\n    } else if (image instanceof Blob) {\n      const objectUrl = URL.createObjectURL(image);\n      setImageUrl(objectUrl);\n\n      // Clean up object URL when component unmounts or image changes\n      return () => {\n        URL.revokeObjectURL(objectUrl);\n      };\n    }\n  }, [image]);\n\n  // Handle adjustment changes\n  const handleChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newSettings = {\n      ...settings,\n      [name]: parseFloat(value)\n    };\n    setSettings(newSettings);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/images/process\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...newSettings,\n          image: preview || imageUrl // Use the preview or the original image URL\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Error applying adjustments\");\n      }\n      const data = await response.json();\n      setPreview(data.previewUrl); // Update preview with the processed image\n    } catch (err) {\n      console.error(\"Error applying adjustments\", err);\n    }\n  };\n\n  // Handle cropping\n  const handleCrop = async () => {\n    if (!cropper) return;\n    const croppedCanvas = cropper.getCroppedCanvas({\n      width: 500,\n      // Adjust the width to a reasonable size\n      height: 500 // Adjust the height\n    });\n    const croppedImage = croppedCanvas.toDataURL(\"image/jpeg\", 0.7); // 70% quality to reduce size\n\n    setPreview(croppedImage);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/images/process\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: croppedImage,\n          ...settings\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Error applying crop\");\n      }\n      const data = await response.json();\n      setPreview(data.previewUrl); // Update preview with processed image\n    } catch (err) {\n      console.error(\"Error applying crop\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Cropper, {\n        src: imageUrl,\n        style: {\n          height: 400,\n          width: \"40%\"\n        },\n        initialAspectRatio: 1,\n        aspectRatio: 1,\n        guides: false,\n        cropBoxResizable: false,\n        ref: cropperRef,\n        onInitialized: instance => setCropper(instance)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCrop,\n        children: \"Crop and Apply Adjustments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Brightness\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"brightness\",\n        min: \"0\",\n        max: \"2\",\n        step: \"0.1\",\n        value: settings.brightness,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Contrast\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"contrast\",\n        min: \"0\",\n        max: \"2\",\n        step: \"0.1\",\n        value: settings.contrast,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Saturation\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"saturation\",\n        min: \"0\",\n        max: \"2\",\n        step: \"0.1\",\n        value: settings.saturation,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Rotation\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"rotation\",\n        min: \"0\",\n        max: \"360\",\n        step: \"1\",\n        value: settings.rotation,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(AdjustmentSliders, \"6Wb8EwYSEs2jt/N+IhNDx5N8Gg0=\", false, function () {\n  return [useImage];\n});\n_c = AdjustmentSliders;\nexport default AdjustmentSliders;\nvar _c;\n$RefreshReg$(_c, \"AdjustmentSliders\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useImage","Cropper","jsxDEV","_jsxDEV","AdjustmentSliders","_s","settings","setSettings","setPreview","image","preview","setImage","cropper","setCropper","cropperRef","imageUrl","setImageUrl","Blob","objectUrl","URL","createObjectURL","revokeObjectURL","handleChange","e","name","value","target","newSettings","parseFloat","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","previewUrl","err","console","error","handleCrop","croppedCanvas","getCroppedCanvas","width","height","croppedImage","toDataURL","children","src","style","initialAspectRatio","aspectRatio","guides","cropBoxResizable","ref","onInitialized","instance","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","min","max","step","brightness","onChange","contrast","saturation","rotation","_c","$RefreshReg$"],"sources":["/home/dell/assignment/FilterPixel/image-processor-frontend/src/components/AdjustmentSliders.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useImage } from \"../context/ImageContext\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nconst AdjustmentSliders = () => {\n  const { settings, setSettings, setPreview, image, preview, setImage } =\n    useImage();\n  const [cropper, setCropper] = useState(null);\n  const cropperRef = useRef(null);\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useEffect(() => {\n    if (typeof image === \"string\") {\n      setImageUrl(image);\n    } else if (image instanceof Blob) {\n      const objectUrl = URL.createObjectURL(image);\n      setImageUrl(objectUrl);\n\n      // Clean up object URL when component unmounts or image changes\n      return () => {\n        URL.revokeObjectURL(objectUrl);\n      };\n    }\n  }, [image]);\n\n  // Handle adjustment changes\n  const handleChange = async (e) => {\n    const { name, value } = e.target;\n    const newSettings = { ...settings, [name]: parseFloat(value) };\n    setSettings(newSettings);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/images/process\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...newSettings,\n          image: preview || imageUrl, // Use the preview or the original image URL\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Error applying adjustments\");\n      }\n\n      const data = await response.json();\n      setPreview(data.previewUrl); // Update preview with the processed image\n    } catch (err) {\n      console.error(\"Error applying adjustments\", err);\n    }\n  };\n\n  // Handle cropping\n  const handleCrop = async () => {\n    if (!cropper) return;\n\n    const croppedCanvas = cropper.getCroppedCanvas({\n      width: 500, // Adjust the width to a reasonable size\n      height: 500, // Adjust the height\n    });\n\n    const croppedImage = croppedCanvas.toDataURL(\"image/jpeg\", 0.7); // 70% quality to reduce size\n\n    setPreview(croppedImage);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/images/process\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ image: croppedImage, ...settings }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Error applying crop\");\n      }\n\n      const data = await response.json();\n      setPreview(data.previewUrl); // Update preview with processed image\n    } catch (err) {\n      console.error(\"Error applying crop\", err);\n    }\n  };\n\n  return (\n    <div>\n      {imageUrl && (\n        <div>\n          <Cropper\n            src={imageUrl}\n            style={{ height: 400, width: \"40%\" }}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            guides={false}\n            cropBoxResizable={false}\n            ref={cropperRef}\n            onInitialized={(instance) => setCropper(instance)}\n          />\n          <button onClick={handleCrop}>Crop and Apply Adjustments</button>\n        </div>\n      )}\n\n      {/* Adjustment sliders */}\n      <label>\n        Brightness\n        <input\n          type=\"range\"\n          name=\"brightness\"\n          min=\"0\"\n          max=\"2\"\n          step=\"0.1\"\n          value={settings.brightness}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Contrast\n        <input\n          type=\"range\"\n          name=\"contrast\"\n          min=\"0\"\n          max=\"2\"\n          step=\"0.1\"\n          value={settings.contrast}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Saturation\n        <input\n          type=\"range\"\n          name=\"saturation\"\n          min=\"0\"\n          max=\"2\"\n          step=\"0.1\"\n          value={settings.saturation}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Rotation\n        <input\n          type=\"range\"\n          name=\"rotation\"\n          min=\"0\"\n          max=\"360\"\n          step=\"1\"\n          value={settings.rotation}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default AdjustmentSliders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}