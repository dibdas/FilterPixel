{"ast":null,"code":"var _jsxFileName = \"/home/dell/assignment/FilterPixel/image-processor-frontend/src/ImageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/ImageContext.js\nimport React, { createContext, useState, useContext } from \"react\";\n\n// Create the Image Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageContext = /*#__PURE__*/createContext();\n\n// Provide the state for image manipulation\nexport const ImageProvider = ({\n  children\n}) => {\n  _s();\n  const [image, setImage] = useState(null); // Store the original image file\n  const [preview, setPreview] = useState(null); // Store the preview URL for real-time updates\n  const [settings, setSettings] = useState({\n    brightness: 1,\n    contrast: 1,\n    saturation: 1,\n    rotation: 0\n  }); // Store manipulation settings\n\n  return /*#__PURE__*/_jsxDEV(ImageContext.Provider, {\n    value: {\n      image,\n      setImage,\n      preview,\n      setPreview,\n      settings,\n      setSettings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use ImageContext\n_s(ImageProvider, \"eT6qPftg5Y396XW4WVEN2miyeXQ=\");\n_c = ImageProvider;\nexport const useImage = () => {\n  _s2();\n  return useContext(ImageContext);\n};\n_s2(useImage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ImageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","ImageContext","ImageProvider","children","_s","image","setImage","preview","setPreview","settings","setSettings","brightness","contrast","saturation","rotation","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useImage","_s2","$RefreshReg$"],"sources":["/home/dell/assignment/FilterPixel/image-processor-frontend/src/ImageContext.js"],"sourcesContent":["// context/ImageContext.js\nimport React, { createContext, useState, useContext } from \"react\";\n\n// Create the Image Context\nconst ImageContext = createContext();\n\n// Provide the state for image manipulation\nexport const ImageProvider = ({ children }) => {\n  const [image, setImage] = useState(null); // Store the original image file\n  const [preview, setPreview] = useState(null); // Store the preview URL for real-time updates\n  const [settings, setSettings] = useState({\n    brightness: 1,\n    contrast: 1,\n    saturation: 1,\n    rotation: 0,\n  }); // Store manipulation settings\n\n  return (\n    <ImageContext.Provider\n      value={{ image, setImage, preview, setPreview, settings, setSettings }}\n    >\n      {children}\n    </ImageContext.Provider>\n  );\n};\n\n// Custom hook to use ImageContext\nexport const useImage = () => useContext(ImageContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;EACZ,CAAC,CAAC,CAAC,CAAC;;EAEJ,oBACEd,OAAA,CAACC,YAAY,CAACc,QAAQ;IACpBC,KAAK,EAAE;MAAEX,KAAK;MAAEC,QAAQ;MAAEC,OAAO;MAAEC,UAAU;MAAEC,QAAQ;MAAEC;IAAY,CAAE;IAAAP,QAAA,EAEtEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAhB,EAAA,CAnBaF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAoB1B,OAAO,MAAMoB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzB,UAAU,CAACG,YAAY,CAAC;AAAA;AAACsB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}